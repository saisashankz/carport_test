{"ast":null,"code":"// src/services/productService.js\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { db } from '../firebase';\nexport const productService = {\n  // Get all active products (simplified query)\n  async getProducts() {\n    try {\n      console.log('üîç Fetching products from Firestore...');\n\n      // Simplified query - just filter by status\n      const q = query(collection(db, 'products'), where('status', '==', 'active'));\n      const querySnapshot = await getDocs(q);\n      const products = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      console.log(`‚úÖ Fetched ${products.length} products from Firebase:`, products);\n      return products;\n    } catch (error) {\n      console.error('‚ùå Error fetching products:', error);\n\n      // Try even simpler query - get all products\n      try {\n        console.log('üîÑ Trying simpler query...');\n        const querySnapshot = await getDocs(collection(db, 'products'));\n        const products = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        console.log(`‚úÖ Fetched ${products.length} products (simple query):`, products);\n        return products;\n      } catch (simpleError) {\n        console.error('‚ùå Simple query also failed:', simpleError);\n\n        // Return sample data as fallback\n        console.log('üì¶ Using sample data as fallback...');\n        return [{\n          id: 'sample-1',\n          name: \"Ocean Breeze Premium Air Freshener\",\n          price: 24.99,\n          images: [{\n            src: \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=500\"\n          }],\n          description: \"Transform your car with refreshing ocean breeze scent\",\n          category: \"Premium\",\n          scent: \"Ocean Breeze\",\n          rating: 4.8,\n          reviewCount: 124,\n          status: 'active'\n        }, {\n          id: 'sample-2',\n          name: \"Vanilla Luxury Car Freshener\",\n          price: 22.99,\n          images: [{\n            src: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=500\"\n          }],\n          description: \"Indulge in warm, comforting vanilla scent\",\n          category: \"Luxury\",\n          scent: \"Vanilla\",\n          rating: 4.9,\n          reviewCount: 89,\n          status: 'active'\n        }];\n      }\n    }\n  },\n  // Get featured products (simplified)\n  async getFeaturedProducts() {\n    try {\n      console.log('üåü Fetching featured products...');\n      const querySnapshot = await getDocs(collection(db, 'products'));\n      const allProducts = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n\n      // Filter in JavaScript instead of Firestore query\n      const featuredProducts = allProducts.filter(product => product.featured === true && product.status === 'active').slice(0, 3);\n      console.log(`‚úÖ Fetched ${featuredProducts.length} featured products`);\n      return featuredProducts;\n    } catch (error) {\n      console.error('‚ùå Error fetching featured products:', error);\n      return [];\n    }\n  }\n};","map":{"version":3,"names":["collection","getDocs","query","where","db","productService","getProducts","console","log","q","querySnapshot","products","docs","map","doc","id","data","length","error","simpleError","name","price","images","src","description","category","scent","rating","reviewCount","status","getFeaturedProducts","allProducts","featuredProducts","filter","product","featured","slice"],"sources":["C:/Users/Neoz/OneDrive/Documents/Claude Firebase/carpore-store/src/services/productService.js"],"sourcesContent":["// src/services/productService.js\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nexport const productService = {\r\n  // Get all active products (simplified query)\r\n  async getProducts() {\r\n    try {\r\n      console.log('üîç Fetching products from Firestore...');\r\n      \r\n      // Simplified query - just filter by status\r\n      const q = query(\r\n        collection(db, 'products'), \r\n        where('status', '==', 'active')\r\n      );\r\n      \r\n      const querySnapshot = await getDocs(q);\r\n      const products = querySnapshot.docs.map(doc => ({ \r\n        id: doc.id, \r\n        ...doc.data() \r\n      }));\r\n      \r\n      console.log(`‚úÖ Fetched ${products.length} products from Firebase:`, products);\r\n      return products;\r\n    } catch (error) {\r\n      console.error('‚ùå Error fetching products:', error);\r\n      \r\n      // Try even simpler query - get all products\r\n      try {\r\n        console.log('üîÑ Trying simpler query...');\r\n        const querySnapshot = await getDocs(collection(db, 'products'));\r\n        const products = querySnapshot.docs.map(doc => ({ \r\n          id: doc.id, \r\n          ...doc.data() \r\n        }));\r\n        \r\n        console.log(`‚úÖ Fetched ${products.length} products (simple query):`, products);\r\n        return products;\r\n      } catch (simpleError) {\r\n        console.error('‚ùå Simple query also failed:', simpleError);\r\n        \r\n        // Return sample data as fallback\r\n        console.log('üì¶ Using sample data as fallback...');\r\n        return [\r\n          {\r\n            id: 'sample-1',\r\n            name: \"Ocean Breeze Premium Air Freshener\",\r\n            price: 24.99,\r\n            images: [{ src: \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=500\" }],\r\n            description: \"Transform your car with refreshing ocean breeze scent\",\r\n            category: \"Premium\",\r\n            scent: \"Ocean Breeze\",\r\n            rating: 4.8,\r\n            reviewCount: 124,\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 'sample-2',\r\n            name: \"Vanilla Luxury Car Freshener\",\r\n            price: 22.99,\r\n            images: [{ src: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=500\" }],\r\n            description: \"Indulge in warm, comforting vanilla scent\",\r\n            category: \"Luxury\",\r\n            scent: \"Vanilla\",\r\n            rating: 4.9,\r\n            reviewCount: 89,\r\n            status: 'active'\r\n          }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n\r\n  // Get featured products (simplified)\r\n  async getFeaturedProducts() {\r\n    try {\r\n      console.log('üåü Fetching featured products...');\r\n      \r\n      const querySnapshot = await getDocs(collection(db, 'products'));\r\n      const allProducts = querySnapshot.docs.map(doc => ({ \r\n        id: doc.id, \r\n        ...doc.data() \r\n      }));\r\n      \r\n      // Filter in JavaScript instead of Firestore query\r\n      const featuredProducts = allProducts\r\n        .filter(product => product.featured === true && product.status === 'active')\r\n        .slice(0, 3);\r\n      \r\n      console.log(`‚úÖ Fetched ${featuredProducts.length} featured products`);\r\n      return featuredProducts;\r\n    } catch (error) {\r\n      console.error('‚ùå Error fetching featured products:', error);\r\n      return [];\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}