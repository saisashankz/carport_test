{"ast":null,"code":"// src/services/razorpayService.js\nexport const razorpayService = {\n  // Load Razorpay script\n  async loadRazorpayScript() {\n    return new Promise(resolve => {\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n      script.onload = () => {\n        console.log('‚úÖ Razorpay script loaded successfully');\n        resolve(true);\n      };\n      script.onerror = () => {\n        console.error('‚ùå Failed to load Razorpay script');\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  },\n  // Create payment order\n  async createPaymentOrder(orderData) {\n    try {\n      console.log('üí≥ Creating Razorpay payment order:', orderData);\n\n      // In production, you'd call your backend API here\n      // For demo, we'll simulate the order creation\n      const rzpOrderId = `order_${Date.now()}`;\n      console.log('‚úÖ Payment order created:', rzpOrderId);\n      return {\n        success: true,\n        orderId: rzpOrderId,\n        amount: orderData.amount * 100,\n        // Convert to paise\n        currency: 'INR'\n      };\n    } catch (error) {\n      console.error('‚ùå Failed to create payment order:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  // Process payment\n  async processPayment(paymentData, onSuccess, onError) {\n    try {\n      console.log('üîÑ Loading Razorpay...');\n      const isLoaded = await this.loadRazorpayScript();\n      if (!isLoaded) {\n        throw new Error('Razorpay SDK failed to load. Please check your internet connection.');\n      }\n      console.log('üöÄ Opening Razorpay checkout...');\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: paymentData.amount,\n        // Amount in paise\n        currency: paymentData.currency || 'INR',\n        name: 'CarPore',\n        description: 'Premium Air Fresheners',\n        image: '/logo192.png',\n        // Your app logo\n        order_id: paymentData.orderId,\n        handler: function (response) {\n          console.log('‚úÖ Payment successful:', response);\n          onSuccess({\n            paymentId: response.razorpay_payment_id,\n            orderId: response.razorpay_order_id,\n            signature: response.razorpay_signature\n          });\n        },\n        prefill: {\n          name: paymentData.customerName || '',\n          email: paymentData.customerEmail || '',\n          contact: paymentData.customerPhone || ''\n        },\n        notes: {\n          address: paymentData.address || 'CarPore Customer'\n        },\n        theme: {\n          color: '#FBBF24' // CarPore yellow color\n        },\n        modal: {\n          ondismiss: function () {\n            console.log('‚ö†Ô∏è Payment cancelled by user');\n            onError(new Error('Payment cancelled by user'));\n          }\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error('‚ùå Payment processing error:', error);\n      onError(error);\n    }\n  }\n};","map":{"version":3,"names":["razorpayService","loadRazorpayScript","Promise","resolve","script","document","createElement","src","onload","console","log","onerror","error","body","appendChild","createPaymentOrder","orderData","rzpOrderId","Date","now","success","orderId","amount","currency","message","processPayment","paymentData","onSuccess","onError","isLoaded","Error","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","name","description","image","order_id","handler","response","paymentId","razorpay_payment_id","razorpay_order_id","signature","razorpay_signature","prefill","customerName","email","customerEmail","contact","customerPhone","notes","address","theme","color","modal","ondismiss","rzp","window","Razorpay","open"],"sources":["C:/Users/Neoz/OneDrive/Documents/Claude Firebase/carpore-store/src/services/razorpayService.js"],"sourcesContent":["// src/services/razorpayService.js\r\nexport const razorpayService = {\r\n  // Load Razorpay script\r\n  async loadRazorpayScript() {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n      script.onload = () => {\r\n        console.log('‚úÖ Razorpay script loaded successfully');\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        console.error('‚ùå Failed to load Razorpay script');\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  },\r\n\r\n  // Create payment order\r\n  async createPaymentOrder(orderData) {\r\n    try {\r\n      console.log('üí≥ Creating Razorpay payment order:', orderData);\r\n      \r\n      // In production, you'd call your backend API here\r\n      // For demo, we'll simulate the order creation\r\n      const rzpOrderId = `order_${Date.now()}`;\r\n      \r\n      console.log('‚úÖ Payment order created:', rzpOrderId);\r\n      return {\r\n        success: true,\r\n        orderId: rzpOrderId,\r\n        amount: orderData.amount * 100, // Convert to paise\r\n        currency: 'INR'\r\n      };\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to create payment order:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Process payment\r\n  async processPayment(paymentData, onSuccess, onError) {\r\n    try {\r\n      console.log('üîÑ Loading Razorpay...');\r\n      \r\n      const isLoaded = await this.loadRazorpayScript();\r\n      if (!isLoaded) {\r\n        throw new Error('Razorpay SDK failed to load. Please check your internet connection.');\r\n      }\r\n\r\n      console.log('üöÄ Opening Razorpay checkout...');\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: paymentData.amount, // Amount in paise\r\n        currency: paymentData.currency || 'INR',\r\n        name: 'CarPore',\r\n        description: 'Premium Air Fresheners',\r\n        image: '/logo192.png', // Your app logo\r\n        order_id: paymentData.orderId,\r\n        handler: function (response) {\r\n          console.log('‚úÖ Payment successful:', response);\r\n          onSuccess({\r\n            paymentId: response.razorpay_payment_id,\r\n            orderId: response.razorpay_order_id,\r\n            signature: response.razorpay_signature\r\n          });\r\n        },\r\n        prefill: {\r\n          name: paymentData.customerName || '',\r\n          email: paymentData.customerEmail || '',\r\n          contact: paymentData.customerPhone || ''\r\n        },\r\n        notes: {\r\n          address: paymentData.address || 'CarPore Customer'\r\n        },\r\n        theme: {\r\n          color: '#FBBF24' // CarPore yellow color\r\n        },\r\n        modal: {\r\n          ondismiss: function() {\r\n            console.log('‚ö†Ô∏è Payment cancelled by user');\r\n            onError(new Error('Payment cancelled by user'));\r\n          }\r\n        }\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      console.error('‚ùå Payment processing error:', error);\r\n      onError(error);\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}