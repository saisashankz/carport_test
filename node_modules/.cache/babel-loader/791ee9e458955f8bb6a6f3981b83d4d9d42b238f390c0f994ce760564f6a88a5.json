{"ast":null,"code":"// src/services/authService.js\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nexport const authService = {\n  // Register new user\n  async register(email, password, userData) {\n    try {\n      console.log('üìù Registering new user:', email);\n\n      // Create user account\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Update profile with display name\n      await updateProfile(user, {\n        displayName: `${userData.firstName} ${userData.lastName}`\n      });\n\n      // Store additional user data in Firestore\n      await setDoc(doc(db, 'users', user.uid), {\n        uid: user.uid,\n        email: user.email,\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        phone: userData.phone || '',\n        role: 'customer',\n        createdAt: new Date(),\n        isActive: true\n      });\n      console.log('‚úÖ User registered successfully:', user.uid);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      console.error('‚ùå Registration error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  // Login user\n  async login(email, password) {\n    try {\n      console.log('üîê Logging in user:', email);\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      console.log('‚úÖ User logged in successfully:', user.uid);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      console.error('‚ùå Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  // Logout user\n  async logout() {\n    try {\n      await signOut(auth);\n      console.log('‚úÖ User logged out successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('‚ùå Logout error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  // Get current user data from Firestore\n  async getCurrentUserData() {\n    const user = auth.currentUser;\n    if (user) {\n      try {\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        return userDoc.exists() ? userDoc.data() : null;\n      } catch (error) {\n        console.error('‚ùå Error getting user data:', error);\n        return null;\n      }\n    }\n    return null;\n  },\n  // Auth state observer\n  onAuthStateChange(callback) {\n    return onAuthStateChanged(auth, callback);\n  }\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","doc","setDoc","getDoc","auth","db","authService","register","email","password","userData","console","log","userCredential","user","displayName","firstName","lastName","uid","phone","role","createdAt","Date","isActive","success","error","message","login","logout","getCurrentUserData","currentUser","userDoc","exists","data","onAuthStateChange","callback"],"sources":["C:/Users/Neoz/OneDrive/Documents/Claude Firebase/carpore-store/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged,\r\n  updateProfile\r\n} from 'firebase/auth';\r\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { auth, db } from '../firebase';\r\n\r\nexport const authService = {\r\n  // Register new user\r\n  async register(email, password, userData) {\r\n    try {\r\n      console.log('üìù Registering new user:', email);\r\n      \r\n      // Create user account\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      \r\n      // Update profile with display name\r\n      await updateProfile(user, {\r\n        displayName: `${userData.firstName} ${userData.lastName}`\r\n      });\r\n      \r\n      // Store additional user data in Firestore\r\n      await setDoc(doc(db, 'users', user.uid), {\r\n        uid: user.uid,\r\n        email: user.email,\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        phone: userData.phone || '',\r\n        role: 'customer',\r\n        createdAt: new Date(),\r\n        isActive: true\r\n      });\r\n      \r\n      console.log('‚úÖ User registered successfully:', user.uid);\r\n      return { success: true, user };\r\n    } catch (error) {\r\n      console.error('‚ùå Registration error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Login user\r\n  async login(email, password) {\r\n    try {\r\n      console.log('üîê Logging in user:', email);\r\n      \r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      \r\n      console.log('‚úÖ User logged in successfully:', user.uid);\r\n      return { success: true, user };\r\n    } catch (error) {\r\n      console.error('‚ùå Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  async logout() {\r\n    try {\r\n      await signOut(auth);\r\n      console.log('‚úÖ User logged out successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('‚ùå Logout error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Get current user data from Firestore\r\n  async getCurrentUserData() {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      try {\r\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n        return userDoc.exists() ? userDoc.data() : null;\r\n      } catch (error) {\r\n        console.error('‚ùå Error getting user data:', error);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Auth state observer\r\n  onAuthStateChange(callback) {\r\n    return onAuthStateChanged(auth, callback);\r\n  }\r\n};"],"mappings":"AAAA;AACA,SACEA,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,EAClBC,aAAa,QACR,eAAe;AACtB,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACxD,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AAEtC,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACxC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,KAAK,CAAC;;MAE9C;MACA,MAAMK,cAAc,GAAG,MAAMjB,8BAA8B,CAACQ,IAAI,EAAEI,KAAK,EAAEC,QAAQ,CAAC;MAClF,MAAMK,IAAI,GAAGD,cAAc,CAACC,IAAI;;MAEhC;MACA,MAAMd,aAAa,CAACc,IAAI,EAAE;QACxBC,WAAW,EAAE,GAAGL,QAAQ,CAACM,SAAS,IAAIN,QAAQ,CAACO,QAAQ;MACzD,CAAC,CAAC;;MAEF;MACA,MAAMf,MAAM,CAACD,GAAG,CAACI,EAAE,EAAE,OAAO,EAAES,IAAI,CAACI,GAAG,CAAC,EAAE;QACvCA,GAAG,EAAEJ,IAAI,CAACI,GAAG;QACbV,KAAK,EAAEM,IAAI,CAACN,KAAK;QACjBQ,SAAS,EAAEN,QAAQ,CAACM,SAAS;QAC7BC,QAAQ,EAAEP,QAAQ,CAACO,QAAQ;QAC3BE,KAAK,EAAET,QAAQ,CAACS,KAAK,IAAI,EAAE;QAC3BC,IAAI,EAAE,UAAU;QAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;QACrBC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEFZ,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEE,IAAI,CAACI,GAAG,CAAC;MACxD,OAAO;QAAEM,OAAO,EAAE,IAAI;QAAEV;MAAK,CAAC;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACjD;EACF,CAAC;EAED;EACA,MAAMC,KAAKA,CAACnB,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACFE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,KAAK,CAAC;MAEzC,MAAMK,cAAc,GAAG,MAAMhB,0BAA0B,CAACO,IAAI,EAAEI,KAAK,EAAEC,QAAQ,CAAC;MAC9E,MAAMK,IAAI,GAAGD,cAAc,CAACC,IAAI;MAEhCH,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEE,IAAI,CAACI,GAAG,CAAC;MACvD,OAAO;QAAEM,OAAO,EAAE,IAAI;QAAEV;MAAK,CAAC;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACjD;EACF,CAAC;EAED;EACA,MAAME,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAM9B,OAAO,CAACM,IAAI,CAAC;MACnBO,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,OAAO;QAAEY,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC;IACjD;EACF,CAAC;EAED;EACA,MAAMG,kBAAkBA,CAAA,EAAG;IACzB,MAAMf,IAAI,GAAGV,IAAI,CAAC0B,WAAW;IAC7B,IAAIhB,IAAI,EAAE;MACR,IAAI;QACF,MAAMiB,OAAO,GAAG,MAAM5B,MAAM,CAACF,GAAG,CAACI,EAAE,EAAE,OAAO,EAAES,IAAI,CAACI,GAAG,CAAC,CAAC;QACxD,OAAOa,OAAO,CAACC,MAAM,CAAC,CAAC,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC,GAAG,IAAI;MACjD,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,OAAO,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED;EACAS,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,OAAOpC,kBAAkB,CAACK,IAAI,EAAE+B,QAAQ,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}